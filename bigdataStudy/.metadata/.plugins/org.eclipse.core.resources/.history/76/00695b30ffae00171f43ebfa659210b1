package com.sist.naver;

import java.net.*;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.UnmarshalException;
import javax.xml.bind.Unmarshaller;

import java.io.*;

public class NaverManager {
	public void naverBlogData(String data) {
		String clientId = "ozfy8CF6GuuzaooS9bjM";// 애플리케이션 클라이언트 아이디값";
		String clientSecret = "WHAz50MSVA";// 애플리케이션 클라이언트 시크릿값";
		try {
			String text = URLEncoder.encode(data, "UTF-8");
			//String apiURL = "https://openapi.naver.com/v1/search/blog?query=" + text; // json결	과																		
			String apiURL = "https://openapi.naver.com/v1/search/blog.xml?display=100&query="+ text; //xml 결과
			//display=100 -> item 100
			URL url = new URL(apiURL);
			HttpURLConnection con = (HttpURLConnection) url.openConnection();
			con.setRequestMethod("GET");
			con.setRequestProperty("X-Naver-Client-Id", clientId);
			con.setRequestProperty("X-Naver-Client-Secret", clientSecret);
			int responseCode = con.getResponseCode();
			BufferedReader br;
			if (responseCode == 200) { // 정상 호출
				br = new BufferedReader(new InputStreamReader(con.getInputStream()));
			} else { // 에러 발생
				br = new BufferedReader(new InputStreamReader(con.getErrorStream()));
			}
			String inputLine;
			StringBuffer response = new StringBuffer();
			while ((inputLine = br.readLine()) != null) {
				response.append(inputLine);
			}
			br.close();
			//System.out.println(response.toString());
			FileWriter fw = new FileWriter("/home/sist/movie_data/naver.xml");
			fw.write(response.toString());
			fw.close();
		} catch (Exception e) {
			System.out.println(e);
		}
	}
	public void naverReplyData(){
		try {
			JAXBContext jc = JAXBContext.newInstance(Rss.class);
			Unmarshaller un = jc.createUnmarshaller();
			//String을 매개변수로 받을 수 없으므로 xml로 받고 변환작업거쳐야 
			Rss rss = (Rss)un.unmarshal(new File("/home/sist/movie_data/naver.xml"));
			List<Item> list = rss.getChannel().getItem();
			
		} catch (Exception e) {
			System.out.println(e);
		}
	}
}
