<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd">
<!-- 
면접볼 때 키워드를 말해라.

[웹문제]
서블릿 : http://breath91.tistory.com/entry/Servlet-%EC%9D%B4%EB%9E%80-%EB%AC%B4%EC%97%87%EC%9D%B8%EA%B0%80



[자바 문제]
다형성 : 오버로딩-new, 오버라이딩-modify (각 차이점)
메모리구조: 메소드, 스택, 힙 영역
스태틱과 인스턴스의 차이: 스태틱-공유/공통변수, 인스턴스-개인변수 
객체 : 메모리주소 /이유: 메모리 저장공간이 객체다.
접근지정 차이 : protected, public

[스프링 단골문제]
*인터페이스: 에러가 클라이언트에서 발생하지 않아 의존성을 낮춰준다.
				단점) 과거 자바는 선언 메소드만 있어서 모든 메소드를 구현해야한다. a()
					   그 대안으로 자바1.8 부터 default 메소드를 만들어냈다. a(){}
*di : 클래스와 클래스사이의 연결관계를 만드는 것, 객체간의 의존관계를 메타데이타 또는 di이다.
		- autoowired도  
*프레임워크과 라이브러리의 차이 : 
-->
<context:annotation-config/>
<context:component-scan base-package="com.sist.*"/>
   <bean id="viewResolver"
      class="org.springframework.web.servlet.view.InternalResourceViewResolver"
      p:prefix="/"
      p:suffix=".jsp"
    />

</beans>